/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.finanzas;

import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import controlador.finanzas.CajaControlador;
import controlador.finanzas.ConceptoCajaControlador;
import datos.exceptions.NonexistentEntityException;
import modelo.finanzas.caja.Caja;
import modelo.finanzas.caja.ConceptoCaja;
import modelo.util.DateFormatter;

/**
 *
 * @author JohnFredy
 */
public class RegistroCajasIF extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistroCajasIF
     */
    private CajaControlador controlador;
    private ConceptoCajaControlador conceptoControlador;
    private ConceptoCaja registroSeleccionado;
    private Caja cajaSeleccionada;
    private List<ConceptoCaja> listaConceptos;
    private List<Caja> lista;
    private boolean habilitado = false;
    
    public RegistroCajasIF() {
        initComponents();
        controlador = new CajaControlador();
        conceptoControlador = new ConceptoCajaControlador();
        cajaSeleccionada = null;
        registroSeleccionado = null;
        cargarListaCajas();
        revisarDatosObligatorios();
        if(habilitado){
            cargarTablaPrincipal();
        }
        guardar(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        EntSalRadioCheckGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        nuevoButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        filtroCajasComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        principalTable = new javax.swing.JTable();
        edicionPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        fechaDateChooserCombo = new datechooser.beans.DateChooserCombo();
        conceptoTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        entradaRadioButton = new javax.swing.JRadioButton();
        salidaRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        valorFloatField = new modelo.util.FloatField();
        jLabel5 = new javax.swing.JLabel();
        cajaComboBox = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("Registro Cajas");

        nuevoButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/add42.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        eliminarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/delete27.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        editarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/edit23.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        guardarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/database13.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setEnabled(false);
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        filtroCajasComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        filtroCajasComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filtroCajasComboBoxItemStateChanged(evt);
            }
        });
        filtroCajasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtroCajasComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Caja: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(filtroCajasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                .addComponent(nuevoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarButton)
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eliminarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nuevoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filtroCajasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addComponent(guardarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        principalTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        principalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Concepto", "Entrada", "Salida", "Saldo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(principalTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        edicionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edici√≥n"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Fecha");

        fechaDateChooserCombo.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 14));

        conceptoTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        conceptoTextField.setPreferredSize(new java.awt.Dimension(59, 23));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Concepto");

        EntSalRadioCheckGroup.add(entradaRadioButton);
        entradaRadioButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        entradaRadioButton.setText("Entrada");

        EntSalRadioCheckGroup.add(salidaRadioButton);
        salidaRadioButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        salidaRadioButton.setText("Salida");
        salidaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salidaRadioButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Valor");

        valorFloatField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Caja");

        cajaComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout edicionPanelLayout = new javax.swing.GroupLayout(edicionPanel);
        edicionPanel.setLayout(edicionPanelLayout);
        edicionPanelLayout.setHorizontalGroup(
            edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edicionPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(edicionPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(entradaRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salidaRadioButton)
                        .addGap(66, 66, 66))
                    .addGroup(edicionPanelLayout.createSequentialGroup()
                        .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(edicionPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(valorFloatField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(edicionPanelLayout.createSequentialGroup()
                                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(22, 22, 22)
                                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(conceptoTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fechaDateChooserCombo, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(cajaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(40, Short.MAX_VALUE))))
        );
        edicionPanelLayout.setVerticalGroup(
            edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edicionPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fechaDateChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cajaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conceptoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entradaRadioButton)
                    .addComponent(salidaRadioButton))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(valorFloatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(212, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edicionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edicionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salidaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salidaRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salidaRadioButtonActionPerformed

    private void filtroCajasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtroCajasComboBoxActionPerformed
        // TODO add your handling code here:
        cargarTablaPrincipal();
    }//GEN-LAST:event_filtroCajasComboBoxActionPerformed

    private void filtroCajasComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filtroCajasComboBoxItemStateChanged
        // TODO add your handling code here:
        cargarTablaPrincipal();
    }//GEN-LAST:event_filtroCajasComboBoxItemStateChanged

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        // TODO add your handling code here:
        registroSeleccionado = null;
        guardar(true);
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        guardar(false);
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else if (principalTable.getValueAt(principalTable.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(null, "No hay un registro v√°lido seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            cajaSeleccionada = lista.get(filtroCajasComboBox.getSelectedIndex());
            registroSeleccionado = listaConceptos.get(principalTable.getSelectedRow());
            try {
                controlador.eliminarConcepto(cajaSeleccionada.getId(), registroSeleccionado.getId());
            } catch (NonexistentEntityException ex) {
                JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "El registro tiene datos relacionados.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            }
            registroSeleccionado = null;
            cargarTablaPrincipal();
        }
        guardar(false);
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        guardar(false);
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            registroSeleccionado = listaConceptos.get(principalTable.getSelectedRow());
            guardar(true);
        }
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_editarButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        try {
            // TODO add your handling code here:
            boolean transacionRealizada = false;
            Caja caja = (Caja) cajaComboBox.getSelectedItem();
            Date fecha = fechaDateChooserCombo.getCurrent().getTime();
            boolean entrada = entradaRadioButton.isSelected();
            String descripcion = conceptoTextField.getText();
            float valor = valorFloatField.getFloat();
            
            if (registroSeleccionado == null) {
                ConceptoCaja nuevo = conceptoControlador.nuevo(fecha, descripcion, entrada, valor, caja);
                if (conceptoControlador.validar(nuevo)) {
                    conceptoControlador.guardar(nuevo);
                    transacionRealizada = true;
                }
            } else {
                registroSeleccionado.setFecha(fecha);
                registroSeleccionado.setDescripcion(descripcion);
                registroSeleccionado.setEntrada(entrada);
                registroSeleccionado.setValor(valor);
                registroSeleccionado.setCaja(caja);
                
                if (conceptoControlador.validar(registroSeleccionado)) {
                    try {
                        conceptoControlador.editar(registroSeleccionado);
                        transacionRealizada = true;
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            if (transacionRealizada) {
                guardar(false);
            }
            cargarTablaPrincipal();
        } catch (Exception ex) {
            Logger.getLogger(RegistroCajasIF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_guardarButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup EntSalRadioCheckGroup;
    private javax.swing.JComboBox cajaComboBox;
    private javax.swing.JTextField conceptoTextField;
    private javax.swing.JPanel edicionPanel;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JRadioButton entradaRadioButton;
    private datechooser.beans.DateChooserCombo fechaDateChooserCombo;
    private javax.swing.JComboBox filtroCajasComboBox;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JTable principalTable;
    private javax.swing.JRadioButton salidaRadioButton;
    private modelo.util.FloatField valorFloatField;
    // End of variables declaration//GEN-END:variables
    
    private void cargarTablaPrincipal() {
        try {
            while (principalTable.getRowCount() > 0) {
                ((DefaultTableModel) principalTable.getModel()).removeRow(0);
            }
            
            Caja caja = (Caja) filtroCajasComboBox.getSelectedItem();
            listaConceptos = conceptoControlador.leerLista(caja);
            float saldo = 0;
            if(listaConceptos != null){
                for (ConceptoCaja cc : listaConceptos) {
                    float entrada = cc.isEntrada()?cc.getValor():0;
                    float salida = cc.isEntrada()?0:cc.getValor();
                    saldo = saldo + entrada - salida;
                    Object[] row = {DateFormatter.formatDate(cc.getFecha()),
                        cc.getDescripcion(),
                        entrada,
                        salida,
                        saldo };
                    ((DefaultTableModel) principalTable.getModel()).addRow(row);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(RegistroCajasIF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void guardar(boolean b) {
        guardarButton.setEnabled(b);
        edicionPanel.setVisible(b);
        if (!b) {
            registroSeleccionado = null;
        }
    }
    
    private void cargarDatosRegistroSeleccionado() {
        if (registroSeleccionado == null) {
            fechaDateChooserCombo.setSelectedDate(GregorianCalendar.getInstance());
            fechaDateChooserCombo.setCurrent(GregorianCalendar.getInstance());
            cajaComboBox.setSelectedIndex(filtroCajasComboBox.getSelectedIndex());
            cajaComboBox.enable(false);
            conceptoTextField.setText(null);
            entradaRadioButton.setSelected(false);
            salidaRadioButton.setSelected(false);
            valorFloatField.setFloat(null);
        } else {
            Calendar c = GregorianCalendar.getInstance();
            c.setTime(registroSeleccionado.getFecha());
            fechaDateChooserCombo.setSelectedDate(c);
            fechaDateChooserCombo.setCurrent(c);
            cajaComboBox.setSelectedItem(registroSeleccionado.getCaja());
            conceptoTextField.setText(registroSeleccionado.getDescripcion());
            entradaRadioButton.setSelected(registroSeleccionado.isEntrada());
            salidaRadioButton.setSelected(!registroSeleccionado.isEntrada());
            valorFloatField.setFloat(registroSeleccionado.getValor());
        }
    }
    
    private void cargarListaCajas() {
        cajaComboBox.removeAllItems();
        filtroCajasComboBox.removeAllItems();
        lista = new CajaControlador().leerLista();
        if(lista != null){
            for (Caja caja : lista) {
                cajaComboBox.addItem(caja);
                filtroCajasComboBox.addItem(caja);
            }
        }
    }
    
     private void revisarDatosObligatorios() {
        if (filtroCajasComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registro de caja en la base de datos, por favor cree uno y vuelva a intentar.", "Registros no encontrados", JOptionPane.INFORMATION_MESSAGE);
            deshabilitarForma();
            return;
        }
        habilitado = true;
    }

    private void deshabilitarForma() {
        nuevoButton.setEnabled(false);
        editarButton.setEnabled(false);
        eliminarButton.setEnabled(false);
        guardarButton.setEnabled(false);
        filtroCajasComboBox.setEnabled(false);
        guardar(false);
        principalTable.setEnabled(false);
        edicionPanel.setEnabled(false);
    }
}
