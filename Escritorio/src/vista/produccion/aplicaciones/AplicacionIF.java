/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.produccion.aplicaciones;

import controlador.produccion.administracion.ModuloControlador;
import controlador.produccion.administracion.RolPersonaControlador;
import controlador.produccion.monitoreo.VariableControlador;
import controlador.produccion.aplicaciones.AplicacionControlador;
import controlador.produccion.aplicaciones.InsumoControlador;
import datos.exceptions.NonexistentEntityException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.produccion.administracion.Lote;
import modelo.produccion.administracion.Modulo;
import modelo.produccion.administracion.Persona;
import modelo.produccion.administracion.Rol;
import modelo.produccion.aplicaciones.Aplicacion;
import modelo.produccion.aplicaciones.Insumo;
import modelo.produccion.aplicaciones.MetodoDeAplicacion;
import modelo.produccion.aplicaciones.TipoDeAplicacion;
import modelo.produccion.monitoreo.Variable;
import modelo.util.DateFormatter;
import modelo.util.TableColumnAdjuster;

/**
 *
 * @author fredy
 */
public class AplicacionIF extends javax.swing.JInternalFrame {

    /**
     * Creates new form AplicacionIF
     */
    private AplicacionControlador controlador;
    private Aplicacion selected;
    private List<Aplicacion> lista;
    private boolean habilitado = false;

    public AplicacionIF() {
        initComponents();
        controlador = new AplicacionControlador();
        selected = null;
        asignarFechas();
        cargarListas();
        cargarDatosRegistroSeleccionado();
        if (habilitado) {
            cargarTablaPrincipal();
            guardar(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        nuevoButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        fechaInicioChooserCombo = new datechooser.beans.DateChooserCombo();
        moduloFiltroComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        fechaFinChooserCombo = new datechooser.beans.DateChooserCombo();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        principalTable = new javax.swing.JTable();
        edicionPanel = new javax.swing.JPanel();
        productoComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        responsableComboBox = new javax.swing.JComboBox();
        autorizaComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        observacionesTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cantidadFloatField = new modelo.util.FloatField();
        aguaFloatField = new modelo.util.FloatField();
        horasFloatField = new modelo.util.FloatField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        tipoComboBox = new javax.swing.JComboBox();
        moduloComboBox = new javax.swing.JComboBox();
        autorizacionDateChooserCombo = new datechooser.beans.DateChooserCombo();
        aplicacionDateChooserCombo = new datechooser.beans.DateChooserCombo();
        motivo1ComboBox = new javax.swing.JComboBox();
        motivo2ComboBox = new javax.swing.JComboBox();
        motivo3ComboBox = new javax.swing.JComboBox();
        metodoComboBox = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registro  de Aplicaciones");
        setMinimumSize(new java.awt.Dimension(1269, 568));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1269, 568));

        nuevoButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/add42.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        eliminarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/delete27.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        editarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/edit23.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        guardarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/database13.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setEnabled(false);
        guardarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        fechaInicioChooserCombo.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 14));
        fechaInicioChooserCombo.setMinDate(new java.util.GregorianCalendar(2012, 0, 1));
        fechaInicioChooserCombo.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                fechaInicioChooserComboOnSelectionChange(evt);
            }
        });

        moduloFiltroComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        moduloFiltroComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                moduloFiltroComboBoxItemStateChanged(evt);
            }
        });
        moduloFiltroComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moduloFiltroComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Fecha");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("MÃ³dulo");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Fecha");

        fechaFinChooserCombo.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 14));
        fechaFinChooserCombo.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                fechaFinChooserComboOnSelectionChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nuevoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardarButton)
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(fechaInicioChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(fechaFinChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(moduloFiltroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(237, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guardarButton)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(editarButton)
                        .addComponent(eliminarButton)
                        .addComponent(nuevoButton)))
                .addGap(315, 315, 315))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaFinChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(moduloFiltroComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel13))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1)
                        .addComponent(fechaInicioChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        principalTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        principalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "AutorizaciÃ³n", "AplicaciÃ³n", "Producto", "Motivo 1", "Motivo 2", "Motivo 3", "Cantidad", "L de agua", "MÃ©todo", "Responsable", "Autoriza", "Horas", "Observaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        principalTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumnAdjuster tca = new TableColumnAdjuster(principalTable);
        tca.adjustColumns();
        jScrollPane1.setViewportView(principalTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1046, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );

        edicionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("EdiciÃ³n"));

        productoComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Producto");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Motivo 1");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Cantidad");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("L. de agua");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("MÃ©todo");

        responsableComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        responsableComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responsableComboBoxActionPerformed(evt);
            }
        });

        autorizaComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Responsable");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Autoriza");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Horas");

        observacionesTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Observaciones");

        cantidadFloatField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        aguaFloatField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        horasFloatField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Tipo");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("MÃ³dulo");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("AutorizaciÃ³n");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("AplicaciÃ³n");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Motivo 2");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Motivo 3");

        tipoComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        moduloComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        autorizacionDateChooserCombo.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    motivo1ComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    motivo2ComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    motivo3ComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    metodoComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

    javax.swing.GroupLayout edicionPanelLayout = new javax.swing.GroupLayout(edicionPanel);
    edicionPanel.setLayout(edicionPanelLayout);
    edicionPanelLayout.setHorizontalGroup(
        edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(edicionPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, edicionPanelLayout.createSequentialGroup()
                    .addComponent(jLabel18)
                    .addGap(35, 35, 35)
                    .addComponent(motivo3ComboBox, 0, 97, Short.MAX_VALUE))
                .addGroup(edicionPanelLayout.createSequentialGroup()
                    .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12)
                        .addComponent(jLabel15))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cantidadFloatField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aguaFloatField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(metodoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(responsableComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(autorizaComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(horasFloatField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(observacionesTextField)))
                .addGroup(edicionPanelLayout.createSequentialGroup()
                    .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)
                        .addComponent(jLabel14)
                        .addComponent(jLabel16)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(jLabel17))
                    .addGap(16, 16, 16)
                    .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(motivo1ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(productoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(autorizacionDateChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(moduloComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(aplicacionDateChooserCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(motivo2ComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tipoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
    );
    edicionPanelLayout.setVerticalGroup(
        edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(edicionPanelLayout.createSequentialGroup()
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(tipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel5))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(moduloComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(autorizacionDateChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel14))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel16)
                .addComponent(aplicacionDateChooserCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(productoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(motivo1ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(motivo2ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel17))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(motivo3ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel18))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cantidadFloatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(aguaFloatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(metodoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel9))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(responsableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel10))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(autorizaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel11))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(horasFloatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel12))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(observacionesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel15)))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(edicionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(edicionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        // TODO add your handling code here:
        selected = null;
        guardar(true);
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        guardar(false);
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else if (principalTable.getValueAt(principalTable.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(null, "No hay un registro vÃ¡lido seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            selected = lista.get(principalTable.getSelectedRow());
            try {
                controlador.eliminar(selected.getId());
            } catch (NonexistentEntityException ex) {
                JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "El registro tiene datos relacionados.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            }
            selected = null;
            cargarTablaPrincipal();
        }
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        guardar(false);
        selected = null;
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else if (principalTable.getValueAt(principalTable.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(null, "No hay un registro vÃ¡lido seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            selected = lista.get(principalTable.getSelectedRow());
            guardar(true);
        }
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_editarButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        // TODO add your handling code here:
        //tomando datos del panel de ediciÃ³n
        TipoDeAplicacion tipo = (TipoDeAplicacion) tipoComboBox.getSelectedItem();
        Modulo modulo = (Modulo) moduloComboBox.getSelectedItem();
        Date fechaAutorizacion = autorizacionDateChooserCombo.getCurrent().getTime();
        Date fechaAplicacion = aplicacionDateChooserCombo.getCurrent().getTime();
        Insumo producto = (Insumo) productoComboBox.getSelectedItem();
        Variable motivo1 = (Variable) motivo1ComboBox.getSelectedItem();
        Variable motivo2 = (Variable) motivo2ComboBox.getSelectedItem();
        Variable motivo3 = (Variable) motivo3ComboBox.getSelectedItem();
        float cantidad = cantidadFloatField.getFloat();
        float agua = aguaFloatField.getFloat();
        MetodoDeAplicacion metodo = (MetodoDeAplicacion) metodoComboBox.getSelectedItem();
        Persona responsable = (Persona) responsableComboBox.getSelectedItem();
        Persona autoriza = (Persona) autorizaComboBox.getSelectedItem();
        float horas = horasFloatField.getFloat();
        String observaciones = observacionesTextField.getText();
        //
        if (selected == null) {
            Aplicacion nuevo = controlador.nuevo(tipo, modulo, fechaAutorizacion, fechaAplicacion, producto, motivo1, motivo2, motivo3, cantidad, agua, metodo, responsable, autoriza, horas, observaciones);
            if (controlador.validar(nuevo)) {
                controlador.guardar(nuevo);
                guardar(false);
                cargarDatosRegistroSeleccionado();
                cargarTablaPrincipal();
            }
        } else {
            selected.setTipo(tipo);
            selected.setModulo(modulo);
            selected.setFechaDeAplicacion(fechaAplicacion);
            selected.setFechaDeAutorizacion(fechaAutorizacion);
            selected.setProducto(producto);
            selected.setMotivo1(motivo1);
            selected.setMotivo2(motivo2);
            selected.setMotivo3(motivo3);
            selected.setCantidad(cantidad);
            selected.setLitrosDeAgua(agua);
            selected.setMetodo(metodo);
            selected.setResponsable(responsable);
            selected.setAutoriza(autoriza);
            selected.setHoras(horas);
            selected.setObservaciones(observaciones);
            if (controlador.validar(selected)) {
                try {
                    controlador.editar(selected);
                    guardar(false);
                    selected = null;
                    cargarDatosRegistroSeleccionado();
                    cargarTablaPrincipal();
                } catch (Exception ex) {
                }
            }
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void moduloFiltroComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_moduloFiltroComboBoxItemStateChanged
        // TODO add your handling code here:
        cargarTablaPrincipal();
    }//GEN-LAST:event_moduloFiltroComboBoxItemStateChanged

    private void fechaInicioChooserComboOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_fechaInicioChooserComboOnSelectionChange
        // TODO add your handling code here:
        asignarFechas();
        cargarTablaPrincipal();
    }//GEN-LAST:event_fechaInicioChooserComboOnSelectionChange

    private void fechaFinChooserComboOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_fechaFinChooserComboOnSelectionChange
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaFinChooserComboOnSelectionChange

    private void responsableComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responsableComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_responsableComboBoxActionPerformed

    private void moduloFiltroComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moduloFiltroComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moduloFiltroComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private modelo.util.FloatField aguaFloatField;
    private datechooser.beans.DateChooserCombo aplicacionDateChooserCombo;
    private javax.swing.JComboBox autorizaComboBox;
    private datechooser.beans.DateChooserCombo autorizacionDateChooserCombo;
    private modelo.util.FloatField cantidadFloatField;
    private javax.swing.JPanel edicionPanel;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private datechooser.beans.DateChooserCombo fechaFinChooserCombo;
    private datechooser.beans.DateChooserCombo fechaInicioChooserCombo;
    private javax.swing.JButton guardarButton;
    private modelo.util.FloatField horasFloatField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox metodoComboBox;
    private javax.swing.JComboBox moduloComboBox;
    private javax.swing.JComboBox moduloFiltroComboBox;
    private javax.swing.JComboBox motivo1ComboBox;
    private javax.swing.JComboBox motivo2ComboBox;
    private javax.swing.JComboBox motivo3ComboBox;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JTextField observacionesTextField;
    private javax.swing.JTable principalTable;
    private javax.swing.JComboBox productoComboBox;
    private javax.swing.JComboBox responsableComboBox;
    private javax.swing.JComboBox tipoComboBox;
    // End of variables declaration//GEN-END:variables

    private void cargarTablaPrincipal() {
        while (principalTable.getRowCount() > 0) {
            ((DefaultTableModel) principalTable.getModel()).removeRow(0);
        }
        lista = controlador.leerLista((Lote) moduloFiltroComboBox.getSelectedItem(), fechaInicioChooserCombo.getSelectedDate().getTime(), fechaFinChooserCombo.getSelectedDate().getTime());
        for (Aplicacion ap : lista) {
            Object[] row = {
                ap.getTipo(),
                ap.getModulo(),
                DateFormatter.formatDate(ap.getFechaDeAutorizacion()),
                DateFormatter.formatDate(ap.getFechaDeAplicacion()),
                ap.getProducto(),
                ap.getMotivo1(),
                ap.getMotivo2(),
                ap.getMotivo3(),
                ap.getCantidad(),
                ap.getLitrosDeAgua(),
                ap.getMetodo(),
                ap.getResponsable(),
                ap.getAutoriza(),
                ap.getHoras(),
                ap.getObservaciones()};
            ((DefaultTableModel) principalTable.getModel()).addRow(row);
        }
    }

    private void guardar(boolean b) {
        guardarButton.setEnabled(b);
        edicionPanel.setVisible(b);
        if (!b) {
            selected = null;
        }
    }

    private void cargarDatosRegistroSeleccionado() {
        if (selected == null) {
            tipoComboBox.setSelectedIndex(0);
            moduloComboBox.setSelectedIndex(0);
            Calendar c = GregorianCalendar.getInstance();
            c.setTime(new Date());
            autorizacionDateChooserCombo.setCurrent(c);
            aplicacionDateChooserCombo.setCurrent(c);
            if (productoComboBox.getItemCount() > 0) {
                productoComboBox.setSelectedIndex(0);
            }
            if (motivo1ComboBox.getItemCount() > 0) {
                motivo1ComboBox.setSelectedIndex(0);
            }
            motivo2ComboBox.setSelectedIndex(0);
            motivo3ComboBox.setSelectedIndex(0);
            cantidadFloatField.setText("0");
            aguaFloatField.setText("0");
            metodoComboBox.setSelectedIndex(0);
            if (responsableComboBox.getItemCount() > 0) {
                responsableComboBox.setSelectedIndex(0);
            }
            if (autorizaComboBox.getItemCount() > 0) {
                autorizaComboBox.setSelectedIndex(0);
            }
            horasFloatField.setText("0");
            observacionesTextField.setText(null);
        } else {
            tipoComboBox.setSelectedItem(selected.getTipo());
            moduloComboBox.setSelectedItem(selected.getModulo());
            Calendar c = GregorianCalendar.getInstance();
            c.setTime(selected.getFechaDeAutorizacion());
            autorizacionDateChooserCombo.setCurrent(c);
            c = GregorianCalendar.getInstance();
            c.setTime(selected.getFechaDeAplicacion());
            aplicacionDateChooserCombo.setCurrent(c);
            productoComboBox.setSelectedItem(selected.getProducto());
            motivo1ComboBox.setSelectedItem(selected.getMotivo1());
            if (selected.getMotivo2() != null) {
                motivo2ComboBox.setSelectedItem(selected.getMotivo2());
            }
            if (selected.getMotivo3() != null) {
                motivo3ComboBox.setSelectedItem(selected.getMotivo3());
            }
            cantidadFloatField.setFloat(selected.getCantidad());
            aguaFloatField.setFloat(selected.getLitrosDeAgua());
            metodoComboBox.setSelectedItem(selected.getMetodo());
            responsableComboBox.setSelectedItem(selected.getResponsable());
            autorizaComboBox.setSelectedItem(selected.getAutoriza());
            horasFloatField.setText(selected.getHoras() + "");
            observacionesTextField.setText(selected.getObservaciones());
        }
    }

    private void cargarListas() {
        cargarListaTipos();
        cargarListaModulos();
        cargarListaProductos();
        cargarListasMotivos();
        cargarListaMetodos();
        cargarListaResponsables();
        cargarListaAutorizados();
        revisarDatosObligatorios();
    }

    private void cargarListaTipos() {
        tipoComboBox.removeAllItems();
        tipoComboBox.addItem(TipoDeAplicacion.FERTILIZACION);
        tipoComboBox.addItem(TipoDeAplicacion.FITOSANITARIA);
    }

    private void cargarListaModulos() {
        moduloComboBox.removeAllItems();
        moduloFiltroComboBox.removeAllItems();
        List<Modulo> leerLista = new ModuloControlador().leerLista();
        for (Modulo l : leerLista) {
            moduloComboBox.addItem(l);
            moduloFiltroComboBox.addItem(l);
        }
        if (leerLista.size() > 0) {
            moduloComboBox.setSelectedIndex(0);
            moduloFiltroComboBox.setSelectedIndex(0);
        }
    }

    private void cargarListaProductos() {
        productoComboBox.removeAllItems();
        for (Insumo p : new InsumoControlador().leerLista()) {
            productoComboBox.addItem(p);
        }
        if (productoComboBox.getItemCount() > 0) {
            productoComboBox.setSelectedIndex(0);
        }
    }

    private void cargarListasMotivos() {
        motivo1ComboBox.removeAllItems();
        motivo2ComboBox.removeAllItems();
        motivo3ComboBox.removeAllItems();
        motivo2ComboBox.addItem(null);
        motivo3ComboBox.addItem(null);
        for (Variable v : new VariableControlador().leerLista()) {
            motivo1ComboBox.addItem(v);
            motivo2ComboBox.addItem(v);
            motivo3ComboBox.addItem(v);
        }
        if (motivo1ComboBox.getItemCount() > 0) {
            motivo1ComboBox.setSelectedIndex(0);
        }
        motivo2ComboBox.setSelectedIndex(0);
        motivo3ComboBox.setSelectedIndex(0);
    }

    private void cargarListaMetodos() {
        metodoComboBox.removeAllItems();
        metodoComboBox.addItem(MetodoDeAplicacion.Foliar);
        metodoComboBox.addItem(MetodoDeAplicacion.Inyectado);
        metodoComboBox.addItem(MetodoDeAplicacion.Riego);
    }

    private void cargarListaResponsables() {
        responsableComboBox.removeAllItems();
        for (Persona p : new RolPersonaControlador().leerLista(Rol.TRABAJADOR)) {
            responsableComboBox.addItem(p);
        }
    }

    private void cargarListaAutorizados() {
        autorizaComboBox.removeAllItems();
        for (Persona p : new RolPersonaControlador().leerLista(Rol.ASISTENTE_TECNICO)) {
            autorizaComboBox.addItem(p);
        }
    }

    private void revisarDatosObligatorios() {
        if (productoComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registro de insumos en la base de datos, por favor cree uno y vuelva a intentar.", "Registros no encontrados", JOptionPane.INFORMATION_MESSAGE);
            deshabilitarForma();
            return;
        }
        if (moduloFiltroComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registro de mÃ³dulos en la base de datos, por favor cree uno y vuelva a intentar.", "Registros no encontrados", JOptionPane.INFORMATION_MESSAGE);
            deshabilitarForma();
            return;
        }
        if (responsableComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registro de empleados con rol de Trabajador en la base de datos, por favor cree uno y vuelva a intentar.", "Registros no encontrados", JOptionPane.INFORMATION_MESSAGE);
            deshabilitarForma();
            return;
        }
        if (autorizaComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registro de empleados con rol de Asistente TÃ©cnico en la base de datos, por favor cree uno y vuelva a intentar.", "Registros no encontrados", JOptionPane.INFORMATION_MESSAGE);
            deshabilitarForma();
            return;
        }
        if (motivo1ComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "No hay registro de Variables en la base de datos, por favor cree uno y vuelva a intentar.", "Registros no encontrados", JOptionPane.INFORMATION_MESSAGE);
            deshabilitarForma();
            return;
        }
        habilitado = true;
    }

    private void deshabilitarForma() {
        nuevoButton.setEnabled(false);
        editarButton.setEnabled(false);
        eliminarButton.setEnabled(false);
        guardarButton.setEnabled(false);
        moduloFiltroComboBox.setEnabled(false);
        guardar(false);
        principalTable.setEnabled(false);
        fechaInicioChooserCombo.setEnabled(false);
        fechaFinChooserCombo.setEnabled(false);
    }

    private void asignarFechas() {
        Calendar c = GregorianCalendar.getInstance();
        c.setTime(new Date());
        if (fechaInicioChooserCombo.getCurrent() == null) {
            fechaInicioChooserCombo.setCurrent(c);
        } else {
            c.setTime(fechaInicioChooserCombo.getCurrent().getTime());
            c.add(Calendar.DAY_OF_MONTH, 1);
            fechaFinChooserCombo.setMinDate(c);
            c.add(Calendar.MONTH, 1);
            c.add(Calendar.DAY_OF_MONTH, -1);
            fechaFinChooserCombo.setCurrent(c);
            fechaFinChooserCombo.setSelectedDate(c);
        }
    }
}
