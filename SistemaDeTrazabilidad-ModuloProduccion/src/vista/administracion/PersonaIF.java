/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.administracion;

import controlador.administracion.PersonaControlador;
import controlador.administracion.RolControlador;
import controlador.administracion.RolPersonaControlador;
import dao.exceptions.NonexistentEntityException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.administracion.Persona;
import modelo.administracion.Rol;
import modelo.administracion.RolPersona;
import util.TableColumnAdjuster;

/**
 *
 * @author fredy
 */
public class PersonaIF extends javax.swing.JInternalFrame {

    /**
     * Creates new form PersonaIF
     */
    private PersonaControlador controlador;
    private List<Persona> lista;
    private Persona registroSeleccionado = null;
    private RolPersona rolPersonaSeleccionado = null;
    private DefaultListModel listModel;
    private RolControlador controladorRol;
    private RolPersonaControlador controladorRolPersona;

    public PersonaIF() {
        initComponents();
        controlador = new PersonaControlador();
        controladorRol = new RolControlador();
        controladorRolPersona = new RolPersonaControlador();
        listModel = new DefaultListModel();
        rolesList.setModel(listModel);
        desactivarEdicionPanel();
        desactivarRolesPanel();
        cargarTablaPrincipal();
        cargarListaDeRoles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        nuevoButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        rolesButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        principalTable = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        edicionPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        gsComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        rhComboBox = new javax.swing.JComboBox();
        sexoComboBox = new javax.swing.JComboBox();
        cedulaLongField = new util.LongField();
        telefonoLongField = new util.LongField();
        nombre1TextField = new util.NameField();
        nombre2TextField = new util.NameField();
        apellido1TextField = new util.NameField();
        apellido2TextField = new util.NameField();
        rolPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rolesList = new javax.swing.JList();
        guardarRolPersonaButton = new javax.swing.JButton();
        eliminarRolPersonaButton = new javax.swing.JButton();
        rolesComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        contraseñaTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        editarRolPersonaButton = new javax.swing.JButton();
        nuevoRolPersonaButton = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registro de Empleados");
        setMinimumSize(new java.awt.Dimension(1150, 551));

        nuevoButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/add110.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        eliminarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/delete52.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarButtonActionPerformed(evt);
            }
        });

        editarButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/user134.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/user125.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setEnabled(false);
        guardarButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardarButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        rolesButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rolesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/32x32/group59.png"))); // NOI18N
        rolesButton.setText("Roles");
        rolesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rolesButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rolesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rolesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nuevoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rolesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rolesButton)
                    .addComponent(guardarButton)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(editarButton)
                        .addComponent(eliminarButton)
                        .addComponent(nuevoButton)))
                .addContainerGap())
        );

        principalTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        principalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Nombre 2", "Apellido", "Apellido 2", "Cédula", "Teléfono", "Sexo", "GS + RH"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        principalTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableColumnAdjuster tca = new TableColumnAdjuster(principalTable);
        tca.adjustColumns();
        jScrollPane1.setViewportView(principalTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        edicionPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setText("Primer Nombre");

        jLabel2.setText("Segundo Nombre");

        jLabel3.setText("Primer Apellido");

        jLabel4.setText("Segundo Apellido");

        jLabel5.setText("Cédula");

        jLabel6.setText("Teléfono");

        jLabel7.setText("Sexo");

        jLabel8.setText("G.S");

        gsComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "O", "AB" }));

        jLabel9.setText("R.H.");

        rhComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rhComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "+", "-" }));

        sexoComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sexoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Femenino" }));

        cedulaLongField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        telefonoLongField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nombre1TextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nombre2TextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        apellido1TextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        apellido2TextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout edicionPanelLayout = new javax.swing.GroupLayout(edicionPanel);
        edicionPanel.setLayout(edicionPanelLayout);
        edicionPanelLayout.setHorizontalGroup(
            edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edicionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(42, 42, 42)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rhComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sexoComboBox, 0, 180, Short.MAX_VALUE)
                    .addComponent(cedulaLongField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(telefonoLongField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombre1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombre2TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(apellido1TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(apellido2TextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        edicionPanelLayout.setVerticalGroup(
            edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(edicionPanelLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombre1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nombre2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(apellido1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(apellido2TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cedulaLongField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(telefonoLongField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sexoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(gsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(edicionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(rhComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edición", edicionPanel);

        rolesList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rolesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(rolesList);

        guardarRolPersonaButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        guardarRolPersonaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/16x16/grouped.png"))); // NOI18N
        guardarRolPersonaButton.setText("Guardar");
        guardarRolPersonaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardarRolPersonaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        guardarRolPersonaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarRolPersonaButtonActionPerformed(evt);
            }
        });

        eliminarRolPersonaButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eliminarRolPersonaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/16x16/delete51.png"))); // NOI18N
        eliminarRolPersonaButton.setText("Eliminar");
        eliminarRolPersonaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminarRolPersonaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminarRolPersonaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarRolPersonaButtonActionPerformed(evt);
            }
        });

        rolesComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setText("Contraseña");

        jLabel11.setText("Rol");

        editarRolPersonaButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editarRolPersonaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/16x16/group59.png"))); // NOI18N
        editarRolPersonaButton.setText("Editar");
        editarRolPersonaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editarRolPersonaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editarRolPersonaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarRolPersonaButtonActionPerformed(evt);
            }
        });

        nuevoRolPersonaButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nuevoRolPersonaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/16x16/add111.png"))); // NOI18N
        nuevoRolPersonaButton.setText("Nuevo");
        nuevoRolPersonaButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevoRolPersonaButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevoRolPersonaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoRolPersonaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rolPanelLayout = new javax.swing.GroupLayout(rolPanel);
        rolPanel.setLayout(rolPanelLayout);
        rolPanelLayout.setHorizontalGroup(
            rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rolPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(rolPanelLayout.createSequentialGroup()
                        .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(34, 34, 34)
                        .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contraseñaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rolesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editarRolPersonaButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminarRolPersonaButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardarRolPersonaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nuevoRolPersonaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        rolPanelLayout.setVerticalGroup(
            rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rolPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rolPanelLayout.createSequentialGroup()
                        .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nuevoRolPersonaButton)
                            .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rolesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11)))
                        .addGap(18, 18, 18)
                        .addGroup(rolPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(contraseñaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(rolPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(editarRolPersonaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminarRolPersonaButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(guardarRolPersonaButton)))
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Roles", rolPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        // TODO add your handling code here:
        registroSeleccionado = null;
        activarEdicionPanel();
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void eliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarButtonActionPerformed
        // TODO add your handling code here:
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else if (principalTable.getValueAt(principalTable.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(null, "No hay un registro válido seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (Persona p : lista) {
                if (p.getCedula() == (long) principalTable.getValueAt(principalTable.getSelectedRow(), 4)) {
                    registroSeleccionado = p;
                    break;
                }
            }
            try {
                controlador.eliminar(registroSeleccionado.getId());
            } catch (NonexistentEntityException ex) {
                JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "El registro tiene datos relacionados.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            }
            registroSeleccionado = null;
            cargarTablaPrincipal();
        }
        desactivarEdicionPanel();
        desactivarRolesPanel();
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_eliminarButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        desactivarEdicionPanel();
        desactivarRolesPanel();
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else if (principalTable.getValueAt(principalTable.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(null, "No hay un registro válido seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (Persona p : lista) {
                if (p.getCedula() == (long) principalTable.getValueAt(principalTable.getSelectedRow(), 4)) {
                    registroSeleccionado = p;
                    break;
                }
            }
            activarEdicionPanel();
        }
        cargarDatosRegistroSeleccionado();
    }//GEN-LAST:event_editarButtonActionPerformed

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        // TODO add your handling code here:
        boolean nuevo = registroSeleccionado == null;
        //parametros
        String nombre = nombre1TextField.getText();
        String nombre2 = nombre2TextField.getText();
        String apellido = apellido1TextField.getText();
        String apellido2 = apellido2TextField.getText();
        long cedula = cedulaLongField.getLong();
        String sexo = sexoComboBox.getSelectedItem().toString();
        long telefono = telefonoLongField.getLong();
        String sangre = gsComboBox.getSelectedItem().toString() + rhComboBox.getSelectedItem().toString();
        if (nuevo) {
            registroSeleccionado = new Persona(nombre, nombre2, apellido, apellido2, cedula, sexo, telefono, sangre);
        } else {
            registroSeleccionado.setNombre(nombre);
            registroSeleccionado.setNombre2(nombre2);
            registroSeleccionado.setApellido(apellido);
            registroSeleccionado.setApellido2(apellido2);
            registroSeleccionado.setCedula(cedula);
            registroSeleccionado.setSangre(sangre);
            registroSeleccionado.setSexo(sexo);
            registroSeleccionado.setTelefono(telefono);
        }
        if (controlador.validar(registroSeleccionado)) {
            boolean ok = false;
            if (nuevo) {
                controlador.guardar(registroSeleccionado);
                ok = true;
            } else {
                try {
                    controlador.editar(registroSeleccionado);
                    ok = true;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            if (ok) {
                desactivarEdicionPanel();
                cargarTablaPrincipal();
            }
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void guardarRolPersonaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarRolPersonaButtonActionPerformed
        // TODO add your handling code here:
        if (rolPersonaSeleccionado == null) {
            Rol rol = (Rol) rolesComboBox.getSelectedItem();
            RolPersona nuevo = controladorRolPersona.nuevo(registroSeleccionado, rol, contraseñaTextField.getText());
            if (controladorRolPersona.validar(nuevo, true)) {
                controladorRolPersona.guardar(nuevo);
                contraseñaTextField.setText(null);
                rolesComboBox.setSelectedIndex(0);
                guardarRolPersonaButton.setEnabled(false);
            }
        } else {
            String contraseña = rolPersonaSeleccionado.getContrasena();
            rolPersonaSeleccionado.setContrasena(contraseñaTextField.getText());
            if (controladorRolPersona.validar(rolPersonaSeleccionado, false)) {
                try {
                    controladorRolPersona.editar(rolPersonaSeleccionado);
                    contraseñaTextField.setText(null);
                    rolesComboBox.setSelectedIndex(0);
                    guardarRolPersonaButton.setEnabled(false);
                } catch (Exception ex) {
                }
            } else {
                rolPersonaSeleccionado.setContrasena(contraseña);
            }
        }
        cargarRolesPersona();
    }//GEN-LAST:event_guardarRolPersonaButtonActionPerformed

    private void rolesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rolesButtonActionPerformed
        // TODO add your handling code here:
        if (principalTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else if (principalTable.getValueAt(principalTable.getSelectedRow(), 0) == null) {
            JOptionPane.showMessageDialog(null, "No hay un registro válido seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            for (Persona p : lista) {
                if (p.getCedula() == (long) principalTable.getValueAt(principalTable.getSelectedRow(), 4)) {
                    registroSeleccionado = p;
                    break;
                }
            }
            activarRolesPanel();
            cargarRolesPersona();
        }
    }//GEN-LAST:event_rolesButtonActionPerformed

    private void eliminarRolPersonaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarRolPersonaButtonActionPerformed
        // TODO add your handling code here:
        rolPersonaSeleccionado = null;
        if (rolesList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Rol rol = (Rol) rolesList.getSelectedValue();
            try {
                rolPersonaSeleccionado = controladorRolPersona.buscar(registroSeleccionado, rol);
            } catch (Exception ex) {
            }
            if (rolPersonaSeleccionado == null) {
                JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    controladorRolPersona.eliminar(rolPersonaSeleccionado.getId());
                    cargarRolesPersona();
                } catch (NonexistentEntityException ex) {
                    JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "El registro tiene datos relacionados.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
        contraseñaTextField.setText(null);
        rolesComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_eliminarRolPersonaButtonActionPerformed

    private void editarRolPersonaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarRolPersonaButtonActionPerformed
        // TODO add your handling code here:
        rolPersonaSeleccionado = null;
        rolesComboBox.setEnabled(false);
        rolesComboBox.setSelectedIndex(0);
        if (rolesList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "No hay un registro seleccionado, por favor seleccione uno.", "Registro no seleccionado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Rol rol = (Rol) rolesList.getSelectedValue();
            try {
                rolPersonaSeleccionado = controladorRolPersona.buscar(registroSeleccionado, rol);
            } catch (Exception ex) {
            }
            if (rolPersonaSeleccionado == null) {
                JOptionPane.showMessageDialog(null, "El registro ya no existe.", "Error al eliminar", JOptionPane.INFORMATION_MESSAGE);
            } else {
                contraseñaTextField.setText(rolPersonaSeleccionado.getContrasena());
                guardarRolPersonaButton.setEnabled(true);
            }
        }
    }//GEN-LAST:event_editarRolPersonaButtonActionPerformed

    private void nuevoRolPersonaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoRolPersonaButtonActionPerformed
        // TODO add your handling code here:
        contraseñaTextField.setText(null);
        rolesComboBox.setEnabled(true);
        rolesComboBox.setSelectedIndex(0);
        rolPersonaSeleccionado = null;
        guardarRolPersonaButton.setEnabled(true);
    }//GEN-LAST:event_nuevoRolPersonaButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private util.NameField apellido1TextField;
    private util.NameField apellido2TextField;
    private util.LongField cedulaLongField;
    private javax.swing.JTextField contraseñaTextField;
    private javax.swing.JPanel edicionPanel;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton editarRolPersonaButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton eliminarRolPersonaButton;
    private javax.swing.JComboBox gsComboBox;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton guardarRolPersonaButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private util.NameField nombre1TextField;
    private util.NameField nombre2TextField;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JButton nuevoRolPersonaButton;
    private javax.swing.JTable principalTable;
    private javax.swing.JComboBox rhComboBox;
    private javax.swing.JPanel rolPanel;
    private javax.swing.JButton rolesButton;
    private javax.swing.JComboBox rolesComboBox;
    private javax.swing.JList rolesList;
    private javax.swing.JComboBox sexoComboBox;
    private util.LongField telefonoLongField;
    // End of variables declaration//GEN-END:variables

    private void activarEdicionPanel() {
        guardarButton.setEnabled(true);
        jTabbedPane1.setEnabledAt(0, true);
        nombre1TextField.setEnabled(true);
        nombre2TextField.setEnabled(true);
        apellido1TextField.setEnabled(true);
        apellido2TextField.setEnabled(true);
        cedulaLongField.setEnabled(true);
        telefonoLongField.setEnabled(true);
        sexoComboBox.setEnabled(true);
        gsComboBox.setEnabled(true);
        rhComboBox.setEnabled(true);
        jTabbedPane1.setSelectedIndex(0);
        jTabbedPane1.setEnabledAt(1, false);
    }

    private void desactivarEdicionPanel() {
        guardarButton.setEnabled(false);
        nombre1TextField.setEnabled(false);
        nombre2TextField.setEnabled(false);
        apellido1TextField.setEnabled(false);
        apellido2TextField.setEnabled(false);
        cedulaLongField.setEnabled(false);
        telefonoLongField.setEnabled(false);
        sexoComboBox.setEnabled(false);
        gsComboBox.setEnabled(false);
        rhComboBox.setEnabled(false);
        jTabbedPane1.setEnabledAt(0, false);
        registroSeleccionado = null;
    }

    private void activarRolesPanel() {
        guardarButton.setEnabled(false);
        rolesComboBox.setEnabled(true);
        contraseñaTextField.setEnabled(true);
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setSelectedIndex(1);
        jTabbedPane1.setEnabledAt(0, false);
    }

    private void desactivarRolesPanel() {
        guardarButton.setEnabled(false);
        rolesComboBox.setEnabled(false);
        contraseñaTextField.setEnabled(false);
        jTabbedPane1.setEnabledAt(1, false);
        registroSeleccionado = null;
    }

    private void cargarDatosRegistroSeleccionado() {
        if (registroSeleccionado == null) {
            nombre1TextField.setText(null);
            nombre2TextField.setText(null);
            apellido1TextField.setText(null);
            apellido2TextField.setText(null);
            cedulaLongField.setLong(0);
            telefonoLongField.setLong(0);
            sexoComboBox.setSelectedIndex(0);
            gsComboBox.setSelectedIndex(0);
            rhComboBox.setSelectedIndex(0);
        } else {
            nombre1TextField.setText(registroSeleccionado.getNombre());
            nombre2TextField.setText(registroSeleccionado.getNombre2());
            apellido1TextField.setText(registroSeleccionado.getApellido());
            apellido2TextField.setText(registroSeleccionado.getApellido2());
            cedulaLongField.setLong(registroSeleccionado.getCedula());
            telefonoLongField.setLong(registroSeleccionado.getTelefono());
            if (registroSeleccionado.getSexo().equals("Masculino")) {
                sexoComboBox.setSelectedIndex(0);
            } else {
                sexoComboBox.setSelectedIndex(1);
            }
            String sangre = registroSeleccionado.getSangre();
            if (sangre != null) {
                char rh = sangre.charAt(sangre.length() - 1);
                String gs = sangre.substring(0, sangre.length() - 1);
                if (gs.equals("A")) {
                    gsComboBox.setSelectedIndex(0);
                } else if (gs.equals("B")) {
                    gsComboBox.setSelectedIndex(1);
                } else if (gs.equals("O")) {
                    gsComboBox.setSelectedIndex(2);
                } else if (gs.equals("AB")) {
                    gsComboBox.setSelectedIndex(3);
                }
                if (rh == '+') {
                    rhComboBox.setSelectedIndex(0);
                } else {
                    rhComboBox.setSelectedIndex(1);
                }
            }
        }
    }

    private void cargarTablaPrincipal() {
        while (principalTable.getRowCount() > 0) {
            ((DefaultTableModel) principalTable.getModel()).removeRow(0);
        }
        lista = controlador.leerLista();
        if (lista != null) {
            for (Persona p : lista) {
                Object[] datos = {p.getNombre(), p.getNombre2(), p.getApellido(), p.getApellido2(), p.getCedula(), p.getTelefono(), p.getSexo(), p.getSangre()};
                ((DefaultTableModel) principalTable.getModel()).addRow(datos);
            }
        }
    }

    private void cargarListaDeRoles() {
        List<Rol> roles = controladorRol.leerLista();
        for (Rol r : roles) {
            rolesComboBox.addItem(r);
        }
        rolesComboBox.setSelectedIndex(0);
    }

    private void cargarRolesPersona() {
        listModel.removeAllElements();
        if (registroSeleccionado != null) {
            List<Rol> roles = controladorRolPersona.leerLista(registroSeleccionado);
            for (Rol r : roles) {
                listModel.addElement(r);
            }
        }
    }
}
